/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREEN2VIEWBASE_HPP
#define SCREEN2VIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screen2_screen/Screen2Presenter.hpp>
#include <touchgfx/containers/SwipeContainer.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/containers/progress_indicators/TextProgress.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/containers/ModalWindow.hpp>
#include <touchgfx/Color.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/mixins/ClickListener.hpp>

class Screen2ViewBase : public touchgfx::View<Screen2Presenter>
{
public:
    Screen2ViewBase();
    virtual ~Screen2ViewBase() {}
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void incrementPEEP()
    {
        // Override and implement this function in Screen2
    }

    virtual void decrementPEEP()
    {
        // Override and implement this function in Screen2
    }

    virtual void incrementFreq()
    {
        // Override and implement this function in Screen2
    }

    virtual void decrementFreq()
    {
        // Override and implement this function in Screen2
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::SwipeContainer swipeContainer1;
    touchgfx::Container swipeContainer1Page2;
    touchgfx::Box box1;
    touchgfx::ButtonWithLabel buttonWithLabel3;
    touchgfx::TextArea textArea1_1;
    touchgfx::TextArea textArea1;
    touchgfx::TextProgress textProgress_freq;
    touchgfx::ButtonWithLabel buttonDecrementFreq;
    touchgfx::ButtonWithLabel buttonIncrementFreq;
    touchgfx::ClickListener< touchgfx::TextProgress > textProgress_peep;
    touchgfx::ButtonWithLabel buttonDecrementPEEP;
    touchgfx::ButtonWithLabel buttonIncrementPEEP;
    touchgfx::Box box2;
    touchgfx::Box box2_2;
    touchgfx::TextArea textArea2;
    touchgfx::ScalableImage scalableImage1;
    touchgfx::Container swipeContainer1Page3;
    touchgfx::Box box1_1;
    touchgfx::Box box2_1;
    touchgfx::TextArea textArea2_1;
    touchgfx::ScalableImage scalableImage1_1;
    touchgfx::ScalableImage scalableImage2;
    touchgfx::Image image1;
    touchgfx::ModalWindow modalWindow1;
    touchgfx::ButtonWithLabel buttonWithLabel4;
    touchgfx::ButtonWithLabel buttonWithLabel4_1;
    touchgfx::TextArea textArea3;
    touchgfx::TextAreaWithOneWildcard textArea1_2;
    touchgfx::TextAreaWithOneWildcard textArea1_1_1;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREA1_2_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea1_2Buffer[TEXTAREA1_2_SIZE];
    static const uint16_t TEXTAREA1_1_1_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea1_1_1Buffer[TEXTAREA1_1_1_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Screen2ViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // SCREEN2VIEWBASE_HPP
